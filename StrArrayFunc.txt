# Работа со строками
echo Работа со строками
str1=awlDNllawdla
# Длина строки
echo Длина строки
echo ${#str1}
echo `expr length ${str1}`
echo `expr "${str1}" : '.*'`
# Длина подстроки в строке по регулярному выражению с начала
echo Длина подстроки в строке по регулярному выражению с начала
echo `expr match "$str1" 'DNl'` # регулярное выражение
echo `expr match "$str1" 'awlD'` # регулярное выражение
echo `expr "$str1" : 'DNl'`
echo `expr "$str1" : 'awl'`
# Индекс первого совпадения (учитывает регистр)
echo Индекс первого совпадения
substr1=DNl
echo `expr index $str1 $substr1`
substr1=dl
echo `expr index $str1 $substr1`
# Извлечение подстроки
echo Извлечение подстроки
echo ${str1:3:2} # с 3-го символа 2 символа (индексация с 0)
echo `expr substr $str1 3 2` # (индексация с 1)
echo `expr match "$str1" '\(DN\)'` # пусто, так как ищет совпадения в начале
echo `expr match "$str1" '\(.*DN\)'` # ищет в начале
echo `expr "$str1" : '\(.*DN\)'` # ищет в начале
echo `expr match "$str1" '.*\(DN\)'` # Ищет с конца, универсально
echo `expr match "$str1" '.*\(awl\)'` # Ищет с конца, универсально
echo `expr "$str1" : '.*\(DN\)'` # Ищет с конца, универсально
# Удаление части строки
echo Удаление части строки
echo ${str1#a*l} # удаление самой короткой с начала строки
echo ${str1##a*l} # удаление самой длинной с начала строки
echo ${str1%l*a} # удаление самой короткой с конца строки
echo ${str1%%l*a} # удаление самой длинной с конца строки
# Замена подстроки
echo Замена подстроки
echo ${str1/la/LA} # первое вхождение
echo ${str1//la/LA} # все вхождения
echo ${str1/#a/LA} # первое с начала (только при совпадении начала)
echo ${str1/%a/LA} # первое с конца (только при совпадении конца)
echo --------------------------

# Массивы
echo Массивы
# Объявление
echo Объявление
declare -a area # определение переменной как массива
area[1]=11
area[2]=22
area[3]=33
echo ${area[*]}
area2=( 1 2 3 4 )
echo ${area2[@]}
area3=([1]=1 [17]=17)
echo ${area3[*]}
# Длина
echo Длина
echo ${#area[*]} # длина массива
echo ${#area2} # длина 0-го элемента массива
echo --------------------------

# Функции
echo Функции
# DEFAULT=default 
func () {
    if [ -z "$1" ] 
        then echo "-Аргумент #1 имеет нулевую длину.-" 
        else echo "-Аргумент #1: \"$1\".-"
        fi
    if [ "$2" ]
        then echo "-Аргумент #2: \"$2\".-"
        fi
    return 0
}
echo `func`
echo `func ""`
echo `func first`
echo `func first second`
# Получение результата через код возврата
func2 () {
    if [ -z "$1" ] 
        then return 1
        else return 0
    fi
}
func2
echo $?
func2 1
echo $?
# Получение результата через вывод в переменную
Get_String () {
   echo "string"
}

VARIABLE=$(Get_String)
echo $VARIABLE
echo --------------------------

# Отладка
echo Отладка
# sh -n scriptname — проверит наличие синтаксических ошибок, не запуская сам сценарий (set -n / set +n)
# sh -v scriptname — выводит каждую команду прежде, чем она будет выполнена (set -v / set +v)
# sh -x scriptname — выводит, в краткой форме, результат исполнения каждой команды (set -x / set +x)
